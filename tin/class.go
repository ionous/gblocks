package tin

import (
	r "reflect"
	"time"

	"github.com/ionous/gblocks/block"
)

type Class int

// FIX: consider merging Class and Model?

//go:generate stringer -type=Class
const (
	UnknownClass Class = iota
	Bool
	Int
	Uint
	Float
	Text
	Date
	Option
	InputClass
)

// autogenerated...
// func (i Class) String() string { return "" }
func Classify(t r.Type) (ret Class) {
	switch k := t.Kind(); k {
	case r.Interface:
		ret = InputClass
	case r.Ptr:
		if elType := t.Elem(); elType.Kind() == r.Struct {
			ret = InputClass
		}
	case r.Bool:
		ret = Bool
	case r.Int, r.Int8, r.Int16, r.Int32, r.Int64:
		ret = Int
	case r.Uint, r.Uint8, r.Uint16, r.Uint32, r.Uint64:
		ret = Uint
	case r.Float32, r.Float64:
		ret = Float
	case r.String:
		ret = Text
	default:
		switch t {
		case r.TypeOf((*block.Option)(nil)).Elem():
			ret = Option
		case r.TypeOf((*time.Time)(nil)).Elem():
			ret = Date
		}
	}
	// type FieldVariable string
	// type FieldImageDropdown []FieldImage
	// type FieldImage struct {
	// 	Width, Height int
	// 	Src           string
	// 	Alt           string
	// }
	return
}
